Program 4 [sb - lb - nor - jal - jr - slti]

$a0 : 0xC
$a1 :0x5
$s5 : 0xfffffff0
$s6 : 0x1


# load the initial adderss you support for data memory in s0
j main
fun1: 
nor $s5 , $a1, $a2
slti $s6, $s5, 100
jr $ra 

main: 
addi $t0 , $0 , 0  # i = 0
addi $t1, $0 , 3 # count_Max 
loop1 : beq $t0 , $t1 , finish1
sll $t3, $t0, 2  # t3 = 4*i
add $s1, $s0, $t0 # base + offset
sb $t3, 0($s1)
addi $t0, $t0 ,1 
j loop1

finish1:
add $t0 , $0 , $0 # i = 0
addi $t4 , $0, 0 # sum = 0
loop2 :beq $t0, $t1 , finish2 
add $a1, $t0, $t1
add $a2 , $a1, $a1
jal fun1
add $s1, $s0, $t0
lb $t5,0($s1)
add $t4, $t4, $t5
addi $t0 , $t0 ,1
j loop2
finish2:
addi $a0 , $t4 , 0


//Binary
00001000000000000000000000000100
00000000101001101010100000100101
00101010101101100000000001100100
00000011111000000000000000001000
00100000000010000000000000000000
00100000000010010000000000000011
00010001000010010000000000000101
00000000000010000101100010000000
00000010000010001000100000100000
10100010001010110000000000000000
00100001000010000000000000000001
00001000000000000000000000000110
00000000000000000100000000100000
00100000000011000000000000000000
00010001000010010000000000001000
00000001000010010010100000100000
00000000101001010011000000100000
00001100000000000000000000000001
00000010000010001000100000100000
10000010001011010000000000000000
00000001100011010110000000100000
00100001000010000000000000000001
00001000000000000000000000001110
00100001100001000000000000000000
